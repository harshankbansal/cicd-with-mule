name: Start a release
# This will create a release branch from a particular SHA or Branch. 
# It does not do the actual deployment, the deployment will be triggered from a separate workflow that will be autotriggered when the release branch is pushed.

on:
  workflow_dispatch:
    inputs:
      gitRef:
        required: true
        type: string
        description: The branch or commit SHA to checkout
      withVersion:
        required: true
        type: string
        description: The version to release. This will also determine the version to update in exchange and POM.

defaults:
  run:
    shell: bash

jobs:
  
  create-new-release-branch:
    runs-on: ubuntu-latest
    name: Create release branch
    outputs:
          commitSHA:  ${{ steps.createReleaseBranch.outputs.commitSHA }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: "${{ inputs.gitRef }}"

      - name: Setup Java JDK
        uses: actions/setup-java@v3.13.0
        with:
          java-version: 8  
          distribution: zulu
          architecture: x64
          overwrite-settings: false

      - id: updatePomVersion
        name: Update Pom Version
        env:
          NEW_POM_VERSION: ${{ inputs.withVersion }}
        run: |
            mvn versions:set -DnewVersion=${NEW_POM_VERSION} -DgenerateBackupPoms=false
            echo "Pom updated with verison = ${NEW_POM_VERSION}"

      - name: Push to new release branch
        id: createReleaseBranch
        env:
          NEW_POM_VERSION: ${{ inputs.withVersion }}
        run: |
          set -x
          shortVersion=${NEW_POM_VERSION%.*}
          echo "creating branch with name release/${shortVersion}"
          git checkout -b release/${shortVersion}
          git config --global user.email "github-action-workflows@example.com"
          git config --global user.name "Github Actions Workflow"
          git commit pom.xml -m "Pom updated with verison = ${NEW_POM_VERSION}"
          git push origin HEAD:release/${shortVersion}
          git status
          commitSHA=(git rev-parse HEAD)
          echo "commitSHA=$commitSHA" >> $GITHUB_OUTPUT
          
  deploy-to-prod:
    name: Deploy to Production
    needs: 
      - create-new-release-branch
    uses: ./.github/workflows/deployment-to-production.yaml
    with:
      withVersion: ${{ inputs.withVersion }}
      commitSHA: ${{ needs.create-new-release-branch.outputs.commitSHA }}
    secrets: inherit
